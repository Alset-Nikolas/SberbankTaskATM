"""init default bills 

Revision ID: d07c73373b2e
Revises: 77241a0f952c
Create Date: 2024-05-19 12:10:35.668082

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = 'd07c73373b2e'
down_revision = '77241a0f952c'
branch_labels = None
depends_on = None

currencies = [{'name': 'RUB'}]
bills = [
    {'value': 100, 'currency': 'RUB'},
    {'value': 200, 'currency': 'RUB'},
    {'value': 500, 'currency': 'RUB'},
    {'value': 1000, 'currency': 'RUB'},
    {'value': 5000, 'currency': 'RUB'},
]


def __init_currencies(bind):
    insert_query = sa.text(
        """
            INSERT INTO currencies (name)
            VALUES (:name);
        """,
    )

    for currency in currencies:
        bind.execute(
            insert_query,
            {
                'name': currency['name'],
            },
        )


def __init_bills_and_bank_bills(bind):
    insert_query_bills = sa.text(
        """
            INSERT INTO bills (value, currency_id)
            VALUES (:value, :currency_id)
            RETURNING id;
        """,
    )
    insert_query_bank_bills = sa.text(
        """
        INSERT INTO bank_bills (bill_id, quantity)
        VALUES (:bill_id, :quantity)
        RETURNING id;
        """,
    )
    select_query = sa.text(
        """
            SELECT id FROM currencies WHERE name = :name LIMIT 1;
        """,
    )

    for bill in bills:
        currency = bind.execute(
            select_query,
            {
                'name': bill['currency'],
            },
        )
        bill = bind.execute(
            insert_query_bills,
            {
                'value': bill['value'],
                'currency_id': currency.scalar(),
            },
        )
        bind.execute(
            insert_query_bank_bills,
            {
                'bill_id': bill.scalar(),
                'quantity': 0,
            },
        )


def __delete_currencies(bind):
    delete_query = sa.text(
        """
            DELETE FROM currencies 
            WHERE name= (:name);
        """,
    )

    for currency in currencies:
        bind.execute(
            delete_query,
            {
                'name': currency['name'],
            },
        )


def upgrade():
    bind = op.get_bind()

    __init_currencies(bind)
    __init_bills_and_bank_bills(bind)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()

    __delete_currencies(bind)
